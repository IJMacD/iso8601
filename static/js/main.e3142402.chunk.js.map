{"version":3,"sources":["ISO8601.js","Pages/ISO8601TestPage.js","App.js","index.js"],"names":["getIntervalInstances","DateTimeSpec","input","relativeTo","Object","assign","this","parseEndDate","test","split","dateInput","timeInput","dt","parseTime","parseDate","day","yearDay","console","log","Error","end","setDate","start","getDate","setHours","hour","minute","setMinutes","second","setSeconds","setMilliseconds","getMilliseconds","DateTimeIntervalSpec","first","last","period","repetitions","m","exec","Infinity","substr","length","partA","partB","e","parsePeriod","addDateTimeAndPeriod","subtractPeriodFromDateTime","parse","Date","setFullYear","millennium","century","decade","year","month","week","s","offset","getDay","getFullYear","weekYear","getMonth","weekDay","startDate","maybeDatePart","timePart","candidate","getMonthLength","setMonth","t","datePart","out","years","months","weeks","days","hours","minutes","seconds","dateTime","addDateAndPeriod","date","d","rem","setTime","getHours","getMinutes","getSeconds","y","value","prevValue","i","delta","ISO8601TestPage","convertedInput","error","useState","window","location","hash","inputValue","setInputValue","useEffect","title","history","replaceState","document","cb","addEventListener","removeEventListener","ISO8601","message","style","padding","display","flexDirection","onChange","target","margin","fontSize","placeholder","color","DateTimePreview","label","map","v","showCode","setShowCode","dateFormatter","format","toISOString","Intl","DateTimeFormat","dateStyle","timeStyle","pStyle","labelStyle","fontFamily","hintStyle","type","maxRepetitions","generatorToArray","slice","getRepetitions","isValidDate","border","cursor","onClick","getOrdinal","JSON","stringify","n","generator","maxLength","list","result","next","done","push","isNaN","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3142402.chunk.js","sourcesContent":["export class DateTimeSpec {\r\n    /** @type {?number} */\r\n    millennium;\r\n    /** @type {?number} */\r\n    century;\r\n    /** @type {?number} */\r\n    decade;\r\n    /** @type {?number} */\r\n    year;\r\n    /** @type {?number} */\r\n    month;\r\n    /** @type {?number} */\r\n    day;\r\n    /** @type {?number} */\r\n    hour;\r\n    /** @type {?number} */\r\n    minute;\r\n    /** @type {?number} */\r\n    second;\r\n    /** @type {?number} */\r\n    weekYear;\r\n    /** @type {?number} */\r\n    week;\r\n    /** @type {?number} */\r\n    yearDay;\r\n    /** @type {Date} */\r\n    start;\r\n    /** @type {Date} */\r\n    end;\r\n\r\n    /**\r\n     *\r\n     * @param {string} input\r\n     * @param {DateTimeSpec} relativeTo\r\n     */\r\n    constructor (input, relativeTo = null) {\r\n        if (relativeTo) {\r\n            return Object.assign(this, parseEndDate(input, relativeTo));\r\n        }\r\n\r\n        // if (/^T/.test(input)) {\r\n        //     return Object.assign(this, { ...parseTime(input.substr(1)), start: null, end: null });\r\n        // }\r\n\r\n        if (/T/.test(input)) {\r\n            const [dateInput, timeInput] = input.split(\"T\", 2);\r\n\r\n            const dt = {\r\n                ...parseTime(timeInput),\r\n                ...parseDate(dateInput),\r\n            };\r\n\r\n            if (typeof dt.day !== \"number\" && typeof dt.yearDay !== \"number\") {\r\n                console.log(dt);\r\n                // We didn't have a single day specified so a time is invalid\r\n                throw new Error(\"Invalid data time format \" + input);\r\n            }\r\n\r\n            // Since we have a time we'll reset the parsed date back to the same for start/end\r\n            dt.end.setDate(dt.start.getDate());\r\n\r\n            // Since we had a time component we *must* at least have an hour component\r\n            dt.start.setHours(dt.hour);\r\n\r\n            // Now start finding what granularity was provided\r\n            if (typeof dt.minute === \"number\") {\r\n                dt.end.setHours(dt.hour);\r\n                dt.start.setMinutes(dt.minute);\r\n\r\n                if (typeof dt.second === \"number\") {\r\n                    dt.end.setMinutes(dt.minute);\r\n\r\n                    dt.start.setSeconds(dt.second);\r\n                    if (dt.second % 1) {\r\n                        dt.start.setMilliseconds((dt.second % 1) * 1000);\r\n                        dt.end.setMilliseconds(dt.start.getMilliseconds() + 1);\r\n                    } else {\r\n                        dt.end.setSeconds(dt.second + 1);\r\n                    }\r\n                } else {\r\n                    dt.end.setMinutes(dt.minute + 1);\r\n                }\r\n            } else {\r\n                dt.end.setHours(dt.hour + 1);\r\n            }\r\n\r\n            return Object.assign(this, dt);\r\n        }\r\n\r\n        // if (/:/.test(input)) {\r\n        //     return Object.assign(this, { ...parseTime(input), start: null, end: null });\r\n        // }\r\n\r\n        return Object.assign(this, parseDate(input));\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef TimeSpec\r\n * @property {number} [hour]\r\n * @property {number} [minute]\r\n * @property {number} [second]\r\n */\r\n\r\n/**\r\n * @typedef DateTimePeriodSpec\r\n * @property {number} [years]\r\n * @property {number} [months]\r\n * @property {number} [weeks]\r\n * @property {number} [days]\r\n * @property {number} [hours]\r\n * @property {number} [minutes]\r\n * @property {number} [seconds]\r\n */\r\n\r\nexport class DateTimeIntervalSpec {\r\n    /** @type {?DateTimeSpec} */\r\n    first = null;\r\n    /** @type {?DateTimeSpec} */\r\n    last = null;\r\n    /** @type {?DateTimePeriodSpec} */\r\n    period = null;\r\n    /** @type {?number} */\r\n    repetitions = 0;\r\n    /** @type {Date} */\r\n    start;\r\n    /** @type {?Date} */\r\n    end = null;\r\n\r\n    /**\r\n     * @param {string} input\r\n     */\r\n    constructor (input) {\r\n        const m = /^R(\\d*)\\//.exec(input);\r\n        if(m) {\r\n            if (m[1]) {\r\n                this.repetitions = +m[1];\r\n            } else {\r\n                this.repetitions = Infinity;\r\n            }\r\n\r\n            input = input.substr(m[0].length);\r\n        }\r\n\r\n        if (!/\\//.test(input)) {\r\n            throw new Error(\"Invalid range \" + input);\r\n        }\r\n\r\n        const [partA, partB] = input.split(\"/\", 2);\r\n\r\n        try {\r\n            const first = new DateTimeSpec(partA);\r\n\r\n            try {\r\n                const last = new DateTimeSpec(partB, first);\r\n\r\n                return Object.assign(this, { first, last, start: first.start, end: last.start });\r\n            } catch (e) {\r\n                try {\r\n                    const period = parsePeriod(partB);\r\n\r\n                    return Object.assign(this, { first, period, start: first.start, end: addDateTimeAndPeriod(first, period) });\r\n                }\r\n                catch (e) {\r\n                    throw new Error(\"Invalid range part \" + partB);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            try {\r\n                const period = parsePeriod(partA);\r\n\r\n                try {\r\n                    const last = new DateTimeSpec(partB);\r\n\r\n                    return Object.assign(this, { period, last, start: subtractPeriodFromDateTime(period, last), end: last.end });\r\n                } catch (e) {\r\n                    throw new Error(\"Invalid range part \" + partB);\r\n                }\r\n            } catch (e) {\r\n                throw new Error(\"Invalid range part \" + partA);\r\n            }\r\n        }\r\n\r\n        // unreachable\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n */\r\nexport function parse (input) {\r\n    try {\r\n        return new DateTimeSpec(input);\r\n    } catch (e) {}\r\n\r\n    try {\r\n        return new DateTimeIntervalSpec(input);\r\n    } catch (e) {}\r\n\r\n    throw new Error(\"Invalid input \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n */\r\nfunction parseDate (input) {\r\n    if (/^\\d$/.test(input)) {\r\n        const start = new Date(+input * 1000, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 1000);\r\n\r\n        const end = new Date((+input + 1) * 1000, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 1000);\r\n\r\n        return {\r\n            millennium: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    if (/^\\d\\d$/.test(input)) {\r\n        const start = new Date(+input * 100, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 100);\r\n\r\n        const end = new Date((+input + 1) * 100, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 100);\r\n\r\n        return {\r\n            century: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    if (/^\\d{3}$/.test(input)) {\r\n        const start = new Date(+input * 10, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 10);\r\n\r\n        const end = new Date((+input + 1) * 10, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 10);\r\n\r\n        return {\r\n            decade: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    // Check for four or more digit year\r\n    let m = /^[+-]\\d{4,}|\\d{4}/.exec(input);\r\n\r\n    if (!m) {\r\n        throw new Error(\"Invalid date format (bad year) \" + input);\r\n    }\r\n\r\n    const year = +m[0];\r\n    input = input.substr(m[0].length);\r\n\r\n    if (input.length === 0) {\r\n        const start = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year + 1, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year + 1);\r\n\r\n        return {\r\n            year,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const start = new Date(year, +m[1] - 1, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year, +m[1], 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year);\r\n\r\n        return {\r\n            year,\r\n            month: +m[1],\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-?(\\d{2})-?(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const start = new Date(year, +m[1] - 1, +m[2]);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year, +m[1] - 1, +m[2] + 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year);\r\n\r\n        return {\r\n            year,\r\n            month: +m[1],\r\n            day: +m[2],\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-?W(\\d{2})$/.exec(input);\r\n    if (m) {\r\n\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        // getDay(): 0 - 6; Sun - Mon\r\n        const offset = [2, 1, 0, -1, -2, 4, 3][s.getDay()];\r\n\r\n        s.setDate(offset);\r\n\r\n        const start = new Date(+s + ((week - 1) * 7 * 86400000));\r\n\r\n        if (week === 53 && start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            weekYear: year,\r\n            week,\r\n            start,\r\n            end: new Date(start.getFullYear(), start.getMonth(), start.getDate() + 7),\r\n        };\r\n    }\r\n\r\n    m = /^-?W(\\d{2})-?(\\d)$/.exec(input);\r\n    if (m) {\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const weekDay = +m[2];\r\n        if (weekDay < 1 || weekDay > 7) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        // getDay(): 0 - 6; Sun - Mon\r\n        const offset = [2, 1, 0, -1, -2, 4, 3][s.getDay()];\r\n\r\n        s.setDate(offset);\r\n\r\n        const start = new Date(+s + ((week - 1) * 7 * 86400000));\r\n\r\n        start.setDate(start.getDate() + weekDay - 1);\r\n\r\n        if (week === 53 && start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            weekYear: year,\r\n            week,\r\n            weekDay,\r\n            start,\r\n            end: new Date(start.getFullYear(), start.getMonth(), start.getDate() + 1),\r\n        };\r\n    }\r\n\r\n    m = /^-?(\\d{3})$/.exec(input);\r\n    if (m) {\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        const yearDay = +m[1];\r\n\r\n        if (yearDay < 1 || yearDay > 366) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const start = new Date(+s + ((yearDay - 1) * 86400000));\r\n\r\n        if (start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            year,\r\n            yearDay,\r\n            start,\r\n            end: new Date(year, start.getMonth(), start.getDate() + 1),\r\n        };\r\n    }\r\n\r\n    throw new Error(\"Invalid date format \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @param {DateTimeSpec} startDate\r\n */\r\nfunction parseEndDate (input, startDate) {\r\n    let [ maybeDatePart, timePart ] = input.split(\"T\", 2);\r\n\r\n    /** @type {any} */\r\n    let candidate = Object.assign({}, startDate);\r\n\r\n    let m = /^(\\d{2})$/.exec(maybeDatePart);\r\n    if (m) {\r\n        let { year, month, day, hour, minute, second } = startDate;\r\n\r\n        const start = new Date(startDate.start);\r\n        const end = new Date(startDate.end);\r\n\r\n        if (!timePart) {\r\n            if (typeof second === \"number\") {\r\n                second = +m[1];\r\n\r\n                if (second > 61) {\r\n                    throw new Error(\"Are you sure you want second to be \" + second);\r\n                }\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                minute = +m[1];\r\n\r\n                if (minute > 60) {\r\n                    throw new Error(\"Are you sure you want minute to be \" + minute);\r\n                }\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n            } else if (typeof hour === \"number\") {\r\n                hour = +m[1];\r\n\r\n                if (hour > 23) {\r\n                    throw new Error(\"Are you sure you want hout to be \" + hour);\r\n                }\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour + 1);\r\n            } else if (typeof day === \"number\") {\r\n                day = +m[1];\r\n\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day > getMonthLength(start)) {\r\n                    throw new Error(\"Are you sure you want day to be \" + day);\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n\r\n                if (month > 12) {\r\n                    throw new Error(\"Are you sure you want month to be \" + month);\r\n                }\r\n\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n        }\r\n        else {\r\n            if (typeof day === \"number\") {\r\n                day = +m[1];\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day > getMonthLength(start)) {\r\n                    throw new Error(\"Are you sure you want day to be \" + day);\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n\r\n                if (month > 12) {\r\n                    throw new Error(\"Are you sure you want month to be \" + month);\r\n                }\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n        }\r\n\r\n        candidate = { year, month, day, hour, minute, second, start, end };\r\n    }\r\n    else {\r\n        m = /^(\\d{2})-(\\d{2})$/.exec(maybeDatePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = startDate;\r\n\r\n            const start = new Date(startDate.start);\r\n            const end = new Date(startDate.end);\r\n\r\n            if (typeof day !== \"number\" || typeof month !== \"number\") {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n\r\n            month = +m[1];\r\n            day = +m[2];\r\n\r\n            start.setMonth(month - 1);\r\n            end.setMonth(month - 1);\r\n\r\n            start.setDate(day);\r\n            end.setDate(day + 1);\r\n\r\n            if (month > 12) {\r\n                throw new Error(\"Are you sure you want month to be \" + month);\r\n            }\r\n\r\n            if (day > getMonthLength(start)) {\r\n                throw new Error(\"Are you sure you want day to be \" + day);\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second, start, end };\r\n        } else {\r\n            try {\r\n                return parseDate(maybeDatePart);\r\n            } catch (e) {}\r\n\r\n            timePart = maybeDatePart;\r\n        }\r\n    }\r\n\r\n    if (timePart) {\r\n        m = /^(\\d{2}):(\\d{2})$/.exec(timePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = candidate;\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            if (typeof second === \"number\") {\r\n                minute = +m[1];\r\n                second = +m[2];\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute);\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                hour = +m[1];\r\n                minute = +m[2];\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour);\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n\r\n                if (hour > 23) {\r\n                    throw new Error(\"Are you sure you want hour to be \" + hour);\r\n                }\r\n\r\n                if (minute > 60) {\r\n                    throw new Error(\"Are you sure you want minute to be \" + minute);\r\n                }\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + input);\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second, start, end };\r\n        } else {\r\n            const t = parseTime(timePart);\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            start.setHours(t.hour);\r\n            end.setHours(t.hour);\r\n\r\n            start.setMinutes(t.minute);\r\n            end.setMinutes(t.minute);\r\n\r\n            start.setSeconds(t.second);\r\n            end.setSeconds(t.second + 1);\r\n\r\n            Object.assign(candidate, t, { start, end });\r\n\r\n            if (t.hour > 23) {\r\n                throw new Error(\"Are you sure you want hours to be \" + t.hour);\r\n            }\r\n\r\n            if (t.minute > 60) {\r\n                throw new Error(\"Are you sure you want minutes to be \" + t.minute);\r\n            }\r\n\r\n            if (t.second > 61) {\r\n                throw new Error(\"Are you sure you want seconds to be \" + t.second);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (candidate) {\r\n        return candidate;\r\n    }\r\n\r\n    return new DateTimeSpec(input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @returns {TimeSpec}\r\n */\r\nfunction parseTime (input) {\r\n\r\n    let m = /^(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        return {\r\n            hour: +m[1],\r\n        };\r\n    }\r\n\r\n    m = /^(\\d{2}):?(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        return {\r\n            hour: +m[1],\r\n            minute: +m[2],\r\n        };\r\n    }\r\n\r\n    m = /^(\\d{2}):?(\\d{2}):?(\\d\\d(?:\\.\\d+)?)$/.exec(input);\r\n    if (m) {\r\n        return {\r\n            hour: +m[1],\r\n            minute: +m[2],\r\n            second: +m[3],\r\n        };\r\n    }\r\n\r\n    throw new Error(\"Invalid time format \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @returns {DateTimePeriodSpec}\r\n */\r\nfunction parsePeriod (input) {\r\n    if (!/^P/.test(input)) {\r\n        throw new Error(\"Invalid period \" + input);\r\n    }\r\n\r\n    const [datePart, timePart] = input.substr(1).split(\"T\");\r\n\r\n    const out = {};\r\n\r\n    let m = /(\\d+(?:\\.\\d+)?)Y/.exec(datePart);\r\n    if (m) {\r\n        out.years = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(datePart);\r\n    if (m) {\r\n        out.months = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)W/.exec(datePart);\r\n    if (m) {\r\n        out.weeks = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)D/.exec(datePart);\r\n    if (m) {\r\n        out.days = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)H/.exec(timePart);\r\n    if (m) {\r\n        out.hours = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(timePart);\r\n    if (m) {\r\n        out.minutes = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)S/.exec(timePart);\r\n    if (m) {\r\n        out.seconds = +m[1];\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n *\r\n * @param {DateTimeSpec} dateTime\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\nexport function addDateTimeAndPeriod (dateTime, period) {\r\n    return addDateAndPeriod(dateTime.start, period);\r\n}\r\n/**\r\n *\r\n * @param {Date} date\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\nexport function addDateAndPeriod (date, period) {\r\n    const d = new Date(date);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() + period.years);\r\n\r\n        const rem = period.years % 1;\r\n        if (rem) {\r\n            d.setMonth(d.getMonth() + rem * 12);\r\n        }\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() + period.months);\r\n\r\n        const rem = period.months % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * getMonthLength(d));\r\n        }\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() + period.weeks * 7);\r\n\r\n        const rem = period.weeks % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * 7);\r\n        }\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() + period.days);\r\n\r\n        const rem = period.days % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 24 * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() + period.hours);\r\n\r\n        const rem = period.hours % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() + period.minutes);\r\n\r\n        const rem = period.minutes % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() + period.seconds);\r\n\r\n        const rem = period.seconds % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 1000);\r\n        }\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n * @param {Date} date\r\n */\r\nfunction getMonthLength (date) {\r\n    const m = date.getMonth();\r\n\r\n    if (m === 1) {\r\n        const y = date.getFullYear();\r\n\r\n        return (y % 400 === 0 || (y % 4 === 0 && y % 100 !== 0)) ? 29 : 28;\r\n    }\r\n\r\n    return [31,0,31,30,31,30,31,31,30,31,30,31][m];\r\n}\r\n\r\n/**\r\n *\r\n * @param {DateTimePeriodSpec} period\r\n * @param {DateTimeSpec} dateTime\r\n * @returns {Date}\r\n */\r\nfunction subtractPeriodFromDateTime (period, dateTime) {\r\n    const d = new Date(dateTime.start);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() - period.years);\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() - period.months);\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() - period.weeks * 7);\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() - period.days);\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() - period.hours);\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() - period.minutes);\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() - period.seconds);\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n * @param {DateTimeIntervalSpec} value\r\n * @returns {Generator<DateTimeIntervalSpec>}\r\n */\r\nexport function* getIntervalInstances (value) {\r\n    let prevValue = {\r\n        start: value.start,\r\n        end: value.end,\r\n        period: value.period,\r\n        first: null,\r\n        last: null,\r\n        repetitions: 0,\r\n    };\r\n\r\n    // +1 because repetitions spec doesn't include the very start date or the end of the 0th period\r\n    for (let i = 0; i < value.repetitions + 1; i++) {\r\n        yield prevValue;\r\n        if (value.period) {\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: addDateAndPeriod(prevValue.end, value.period),\r\n                period: value.period,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        } else {\r\n            // Many errors due to leap days/seconds\r\n            // TODO: Implement {DateTime - DateTime = Period}\r\n            const delta = +prevValue.end - +prevValue.start;\r\n\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: new Date(+prevValue.end + delta),\r\n                period: null,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        }\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport * as ISO8601 from \"../ISO8601\";\r\nimport { DateTimeIntervalSpec, DateTimeSpec, getIntervalInstances } from \"../ISO8601\";\r\n\r\nexport default function ISO8601TestPage () {\r\n    const [ inputValue, setInputValue ] = useState(() => {\r\n        if (window.location.hash.length > 1) {\r\n            return window.location.hash.substr(1);\r\n        }\r\n        return \"\";\r\n    });\r\n    const testValues = [\"2\", \"20\", \"202\", \"2021\", \"2021-01\", \"2021-01-18\", \"2021-01-18T15\", \"2021-01-18T15:30\", \"2021-01-18T15:30:00\", \"2021-W03\", \"2021-W03-1\", \"2021-018\", \"20210623\", \"2021174\", \"2021W25\", \"2021W253\", \"2021-018T15\", \"2021-018T15:30\", \"2021-018T15:30:00\", \"2021-018T15:30:00.5\", \"2021-018/P1M\", \"2021-018/P1DT1M\", \"R5/2021-018/P1W\", \"R3/2012-10-01T14:12:01/10T16:19:35\", \"R2/2012-10-01T14:12/12-10T16:19\", \"R2/2012-10-01T14:12:01/12-10T16:19\" ];\r\n\r\n    useEffect(() => {\r\n        const title = `ISO8601 - ${inputValue}`;\r\n        window.history.replaceState(null, title, `#${inputValue}`);\r\n        document.title = title;\r\n    }, [inputValue]);\r\n\r\n    useEffect(() => {\r\n        function cb () {\r\n            setInputValue(window.location.hash.substr(1));\r\n        }\r\n\r\n        window.addEventListener(\"hashchange\", cb);\r\n\r\n        return () => window.removeEventListener(\"hashchange\", cb);\r\n    }, []);\r\n\r\n    let convertedInput, error;\r\n\r\n    if (inputValue) {\r\n        try {\r\n            convertedInput = ISO8601.parse(inputValue);\r\n        } catch (e) {\r\n            error = e.message;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: \"2em\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <input value={inputValue} onChange={e => setInputValue(e.target.value)} style={{margin:4,fontSize:\"1.5em\"}} placeholder=\"Input\" />\r\n            { error && <p style={{color:\"red\"}}>{error}</p> }\r\n            { convertedInput && <DateTimePreview value={convertedInput} label={`Input: ${inputValue}`} /> }\r\n            <h2>Test Values</h2>\r\n            {\r\n                testValues.map((v, i) => <DateTimePreview value={ISO8601.parse(v)} label={`Input: ${v}`} key={i} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {import(\"../ISO8601\").DateTimeSpec|import(\"../ISO8601\").DateTimeIntervalSpec} props.value\r\n * @param {string} [props.label]\r\n * @returns\r\n */\r\nfunction DateTimePreview ({ value, label = \"\" }) {\r\n    const [ showCode, setShowCode ] = useState(false);\r\n\r\n    // @ts-ignore\r\n    const dateFormatter = (typeof value.year === \"number\" && value.year < 0) ?\r\n        { format: (/** @type {Date} */ d) => d.toISOString() }\r\n        : new Intl.DateTimeFormat([], { dateStyle: \"long\", timeStyle: \"long\" });\r\n\r\n    const pStyle = { margin: 0 };\r\n    const labelStyle = { ...pStyle, fontFamily: \"monospace\", color: \"#333\" };\r\n    const hintStyle = {color:\"#666\",fontSize:\"0.8em\"};\r\n    const boxStyle = { margin: 4, padding: 8, border: \"1px solid #333\", cursor: \"pointer\" };\r\n\r\n    const type = value instanceof DateTimeSpec ? \"DateTime\" : \"DateTimeInterval\";\r\n\r\n    const repetitions = value instanceof DateTimeIntervalSpec ? getRepetitions(value, 100) : [];\r\n\r\n    if (!isValidDate(value.start) || !isValidDate(value.end)) {\r\n        return <code style={{color:\"darkred\"}}>Javascript Date error {JSON.stringify(value)}</code>;\r\n    }\r\n\r\n    return (\r\n        <div style={boxStyle} onClick={() => setShowCode(!showCode)}>\r\n            { label && <p style={labelStyle}>{label}</p> }\r\n            <p style={pStyle}>\r\n                <time dateTime={value.start.toISOString()}>{dateFormatter.format(value.start)}</time>\r\n                <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                <time dateTime={value.end.toISOString()}>{dateFormatter.format(value.end)}</time>\r\n            </p>\r\n            {\r\n                repetitions.map((d,i) =>\r\n                    <p style={pStyle} key={i}>\r\n                        <time dateTime={d.start.toISOString()}>{dateFormatter.format(d.start)}</time>\r\n                        <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                        <time dateTime={d.end.toISOString()}>{dateFormatter.format(d.end)}</time>\r\n                        {' '}<span style={hintStyle}>({getOrdinal(i + 1)} Repetition)</span>\r\n                    </p>\r\n                )\r\n            }\r\n            { value instanceof DateTimeIntervalSpec && repetitions.length < value.repetitions &&\r\n                <p style={{...pStyle, ...hintStyle}}>&hellip; {value.repetitions - repetitions.length} more not shown</p>\r\n            }\r\n            { showCode && <code>{JSON.stringify(value)}</code> }\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {ISO8601.DateTimeIntervalSpec} value\r\n */\r\nfunction getRepetitions(value, maxRepetitions = 10) {\r\n    if (value.repetitions === Infinity) {\r\n        return generatorToArray(getIntervalInstances(value), maxRepetitions + 1).slice(1);\r\n    }\r\n\r\n    return [ ...ISO8601.getIntervalInstances(value) ].slice(1, 1 + maxRepetitions);\r\n}\r\n\r\nfunction getOrdinal (n) {\r\n    if (n === 11 || n === 12 || n === 13) return `${n}th`;\r\n    if (n % 10 === 1) return `${n}st`;\r\n    if (n % 10 === 2) return `${n}nd`;\r\n    if (n % 10 === 3) return `${n}rd`;\r\n    return `${n}th`;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {Generator<T, void, unknown>} generator\r\n * @param {number} maxLength\r\n * @returns {T[]}\r\n */\r\nfunction generatorToArray (generator, maxLength) {\r\n    const list = [];\r\n    let i = 0;\r\n\r\n    while (i++ < maxLength) {\r\n        const result = generator.next();\r\n\r\n        if (!result.done && typeof result.value !== \"undefined\") {\r\n            list.push(result.value);\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * @param {Date} date\r\n */\r\nfunction isValidDate (date) {\r\n    return !isNaN(+date);\r\n}","import ISO8601TestPage from './Pages/ISO8601TestPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ISO8601TestPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}