{"version":3,"sources":["ISO8601/util.js","ISO8601/calc.js","ISO8601/parseDate.js","ISO8601/parseTime.js","ISO8601/DateTime.js","ISO8601/parsePeriod.js","ISO8601/DateTimeInterval.js","ISO8601/parseEndDate.js","ISO8601/intervals.js","ISO8601/index.js","Pages/ISO8601TestPage.js","App.js","index.js"],"names":["getMonthLength","date","y","m","Date","getFullYear","getMonth","year","month","isValidDate","isNaN","rationalise","n","sign","Math","int","abs","floor","num_a","num_b","denom_a","denom_b","i","num","denom","addDateAndPeriod","period","d","years","setFullYear","rem","setMonth","months","setDate","getDate","weeks","days","setTime","hours","setHours","getHours","minutes","setMinutes","getMinutes","seconds","setSeconds","getSeconds","parseDate","input","test","millennium","century","decade","exec","substr","length","day","s","week","spec","check","DateTime","start","weekDay","yearDay","parseTime","out","replace","zoneHour","zoneMinute","hour","minute","second","options","Object","assign","this","Error","offset","getDay","millisecond","setMilliseconds","delta","getTimezoneOffset","end","milliseconds","getTime","toISOString","split","dateInput","timeInput","dateSpec","timeSpec","parsePeriod","datePart","timePart","DateTimeInterval","first","last","dateTime","subtractPeriodFromDateTime","repetitions","Infinity","partA","partB","specA","parse","specB","startDate","maybeDatePart","candidate","t","parseEndDate","getIntervalInstances","value","prevValue","dateTimeSpec","dateTimeIntervalSpec","ISO8601TestPage","convertedInput","error","useState","window","location","hash","inputValue","setInputValue","useEffect","title","history","replaceState","document","cb","addEventListener","removeEventListener","ISO8601","style","padding","display","flexDirection","onChange","e","target","margin","fontSize","placeholder","color","DateTimePreview","label","map","v","showCode","setShowCode","pStyle","labelStyle","fontFamily","hintStyle","type","maxRepetitions","generatorToArray","slice","getRepetitions","border","cursor","onClick","dateFormat","getOrdinal","JSON","stringify","generator","maxLength","list","result","next","done","push","Intl","DateTimeFormat","dateStyle","timeStyle","format","toString","padStart","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca1647a8.chunk.js","sourcesContent":["/**\r\n * @param {Date|import(\".\").DateSpec} date\r\n */\r\nexport function getMonthLength (date) {\r\n    let y, m;\r\n\r\n    if (date instanceof Date) {\r\n        y = date.getFullYear();\r\n        m = date.getMonth();\r\n    } else {\r\n        y = date.year;\r\n        m = date.month - 1;\r\n    }\r\n\r\n    if (m === 1) {\r\n        return (y % 400 === 0 || (y % 4 === 0 && y % 100 !== 0)) ? 29 : 28;\r\n    }\r\n\r\n    return [31, 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][m];\r\n}\r\n\r\n/**\r\n * @param {Date} date\r\n */\r\nexport function isValidDate(date) {\r\n    return date instanceof Date && !isNaN(+date);\r\n}\r\n\r\n/**\r\n * @param {number} n\r\n */\r\nexport function rationalise (n) {\r\n    const sign = Math.sign(n);\r\n    n = Math.abs(n);\r\n\r\n    let int = 0;\r\n    if (n >= 1) {\r\n        int = Math.floor(n);\r\n        n -= int;\r\n    }\r\n\r\n    const e = 1e-10; // Number.MIN_VALUE; // 5e-324\r\n\r\n    // Check for integers\r\n    if (n < e) {\r\n        return [ 1, sign * int ];\r\n    }\r\n\r\n    let num_a = 0;\r\n    let num_b = 1;\r\n    let denom_a = 1;\r\n    let denom_b = 1;\r\n\r\n    let i = 0;\r\n    const iteration_limit = 1e6;\r\n\r\n    let num = num_a + num_b;\r\n    let denom = denom_a + denom_b;\r\n    while (Math.abs((num / denom) - n) > e && i < iteration_limit) {\r\n        if ((num / denom) > n) {\r\n            num_b = num;\r\n            denom_b = denom;\r\n        } else {\r\n            num_a = num;\r\n            denom_a = denom;\r\n        }\r\n\r\n        num = num_a + num_b;\r\n        denom = denom_a + denom_b;\r\n        i++;\r\n    }\r\n\r\n    return [ denom,  sign * (int * denom + num) ];\r\n}","import { getMonthLength } from \"./util\";\r\n\r\n/**\r\n *\r\n * @param {DateTimeSpec} dateTime\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\n\r\nexport function addDateTimeAndPeriod(dateTime, period) {\r\n    return addDateAndPeriod(dateTime.start, period);\r\n}\r\n/**\r\n *\r\n * @param {DateTimePeriodSpec} period\r\n * @param {DateTimeSpec} dateTime\r\n * @returns {Date}\r\n */\r\nexport function subtractPeriodFromDateTime (period, dateTime) {\r\n    const d = new Date(dateTime.start);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() - period.years);\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() - period.months);\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() - period.weeks * 7);\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() - period.days);\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() - period.hours);\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() - period.minutes);\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() - period.seconds);\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Date} date\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\nexport function addDateAndPeriod(date, period) {\r\n    const d = new Date(date);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() + period.years);\r\n\r\n        const rem = period.years % 1;\r\n        if (rem) {\r\n            d.setMonth(d.getMonth() + rem * 12);\r\n        }\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() + period.months);\r\n\r\n        const rem = period.months % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * getMonthLength(d));\r\n        }\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() + period.weeks * 7);\r\n\r\n        const rem = period.weeks % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * 7);\r\n        }\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() + period.days);\r\n\r\n        const rem = period.days % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 24 * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() + period.hours);\r\n\r\n        const rem = period.hours % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() + period.minutes);\r\n\r\n        const rem = period.minutes % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() + period.seconds);\r\n\r\n        const rem = period.seconds % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 1000);\r\n        }\r\n    }\r\n\r\n    return d;\r\n}\r\n","import { DateTime } from \"./DateTime\";\r\nimport { getMonthLength, isValidDate } from \"./util\";\r\n\r\n/**\r\n * Parses a date string into a DateSpec object\r\n * Returns null if the string was not valid\r\n * @param {string} input\r\n * @returns {import(\".\").DateSpec}\r\n */\r\nexport function parseDate (input) {\r\n    if (/^\\d$/.test(input)) {\r\n        return {\r\n            millennium: +input,\r\n        };\r\n    }\r\n\r\n    if (/^\\d\\d$/.test(input)) {\r\n        return {\r\n            century: +input,\r\n        };\r\n    }\r\n\r\n    if (/^\\d{3}$/.test(input)) {\r\n        return {\r\n            decade: +input,\r\n        };\r\n    }\r\n\r\n    // Check for four or more digit year\r\n    let m = /^([+-]\\d{4,}|\\d{4})/.exec(input);\r\n\r\n    if (!m) {\r\n        return null;\r\n    }\r\n\r\n    const year = +m[0];\r\n    input = input.substr(m[0].length);\r\n\r\n    if (input.length === 0) {\r\n        return {\r\n            year,\r\n        };\r\n    }\r\n\r\n    m = /^-(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const month = +m[1];\r\n\r\n        if (month < 1 || month > 12) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            year,\r\n            month,\r\n        };\r\n    }\r\n\r\n    m = /^-?(\\d{2})-?(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const month = +m[1];\r\n        const day = +m[2];\r\n\r\n        if (month < 1 || month > 12) {\r\n            return null;\r\n        }\r\n\r\n        if (day < 1) {\r\n            return null;\r\n        }\r\n\r\n        const s = {\r\n            year,\r\n            month,\r\n            day,\r\n        };\r\n\r\n        const monthDays = getMonthLength(s);\r\n\r\n        if (day > monthDays) {\r\n            return null;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    m = /^-?W(\\d{2})$/.exec(input);\r\n    if (m) {\r\n\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            return null;\r\n        }\r\n\r\n        const spec = {\r\n            year,\r\n            week,\r\n        };\r\n\r\n        // Catch bad week 53\r\n        const check = new DateTime(spec);\r\n        if (week === 53 && isValidDate(check.start) && check.start.getFullYear() !== year) {\r\n            return null;\r\n        }\r\n\r\n        return spec;\r\n    }\r\n\r\n    m = /^-?W(\\d{2})-?(\\d)$/.exec(input);\r\n    if (m) {\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            return null;\r\n        }\r\n\r\n        const weekDay = +m[2];\r\n        if (weekDay < 1 || weekDay > 7) {\r\n            return null;\r\n        }\r\n\r\n        const spec = {\r\n            year,\r\n            week,\r\n            weekDay,\r\n        };\r\n\r\n        // Catch bad week 53\r\n        const check = new DateTime(spec);\r\n        if (week === 53 && isValidDate(check.start) && check.start.getFullYear() !== year) {\r\n            return null;\r\n        }\r\n\r\n        return spec;\r\n    }\r\n\r\n    m = /^-?(\\d{3})$/.exec(input);\r\n    if (m) {\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        const yearDay = +m[1];\r\n\r\n        if (yearDay < 1 || yearDay > 366) {\r\n            return null;\r\n        }\r\n\r\n        const spec = {\r\n            year,\r\n            yearDay,\r\n        };\r\n\r\n        // Weed out invalid day 366\r\n        const check = new DateTime(spec);\r\n        if (yearDay === 366 && isValidDate(check.start) && check.start.getFullYear() !== year) {\r\n            return null;\r\n        }\r\n\r\n        return spec;\r\n    }\r\n\r\n    return null;\r\n}","/**\r\n * @param {string} input\r\n * @returns {import(\".\").TimeSpec}\r\n */\r\nexport function parseTime(input) {\r\n    let m;\r\n\r\n    let out = {};\r\n\r\n    // Comma is allowed as decimal separator\r\n    input = input.replace(/,/g,\".\");\r\n\r\n    // Parse Time Zone\r\n    m = /(?:([+−-]\\d\\d)(?::?(\\d\\d))?|Z)$/.exec(input);\r\n\r\n    if (m) {\r\n        if (m[1]) {\r\n            out.zoneHour = +m[1].replace(\"−\", \"-\");\r\n\r\n            if (m[2]) {\r\n                out.zoneMinute = +m[2];\r\n            }\r\n        } else {\r\n            // We must have had \"Z\"\r\n            out.zoneHour = 0;\r\n            out.zoneMinute = 0;\r\n        }\r\n\r\n        input = input.substr(0, input.length - m[0].length);\r\n    }\r\n\r\n    // Support 20210623TZ\r\n    if (m && input.length === 0) {\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d\\d(?:\\.\\d+)?)$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n\r\n        if (out.hour < 0 || out.hour >= 24) {\r\n            return null;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d\\d):?(\\d\\d(?:\\.\\d+)?)$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n        out.minute = +m[2];\r\n\r\n        if (out.hour < 0 || out.hour >= 24 || out.minute < 0 || out.minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d{2}):?(\\d{2}):?(\\d\\d(?:\\.\\d+)?)$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n        out.minute = +m[2];\r\n        out.second = +m[3];\r\n\r\n        if (out.hour < 0 || out.hour >= 24          // Allow fractions up to 24\r\n            || out.minute < 0 || out.minute >= 60   // Allow fractions up to 60\r\n            || out.second < 0 || out.second >= 61   // Allow fractions up to leap second\r\n        ) {\r\n            return null;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    return null;\r\n}\r\n","import { parseDate } from \"./parseDate\";\r\nimport { parseTime } from \"./parseTime\";\r\nimport { rationalise } from \"./util\";\r\n\r\nexport class DateTime {\r\n    /** @type {?number} */\r\n    millennium;\r\n    /** @type {?number} */\r\n    century;\r\n    /** @type {?number} */\r\n    decade;\r\n    /** @type {?number} */\r\n    year;\r\n    /** @type {?number} */\r\n    month;\r\n    /** @type {?number} */\r\n    day;\r\n    /** @type {?number} */\r\n    hour;\r\n    /** @type {?number} */\r\n    minute;\r\n    /** @type {?number} */\r\n    second;\r\n    /** @type {?number} */\r\n    zoneHour;\r\n    /** @type {?number} */\r\n    zoneMinute;\r\n    /** @type {?number} */\r\n    week;\r\n    /** @type {?number} */\r\n    weekDay;\r\n    /** @type {?number} */\r\n    yearDay;\r\n\r\n    /**\r\n     *\r\n     * @param {import(\".\").DateSpec & import(\".\").TimeSpec} options\r\n     */\r\n    constructor (options) {\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    get start () {\r\n        const { year, yearDay, week, weekDay, month = 1, day = 1 } = this;\r\n\r\n        let start;\r\n\r\n        // Handle Date Part\r\n\r\n        if (typeof this.millennium === \"number\") {\r\n            start = new Date(this.millennium * 1000, 0, 1);\r\n            // Catch date constructor problems with years 0 to 99\r\n            start.setFullYear(this.millennium * 1000);\r\n        }\r\n\r\n        else if (typeof this.century === \"number\") {\r\n            start = new Date(this.century * 100, 0, 1);\r\n            // Catch date constructor problems with years 0 to 99\r\n            start.setFullYear(this.century * 100);\r\n        }\r\n\r\n        else if (typeof this.decade === \"number\") {\r\n            start = new Date(this.decade * 10, 0, 1);\r\n            // Catch date constructor problems with years 0 to 99\r\n            start.setFullYear(this.decade * 10);\r\n        }\r\n\r\n        else {\r\n            if (typeof year !== \"number\") {\r\n                throw Error(\"Invalid DateTime\");\r\n            }\r\n\r\n            // Defaults to first of year\r\n            start = new Date(year, month - 1, day);\r\n            // Catch date constructor problems with years 0 to 99\r\n            start.setFullYear(year);\r\n\r\n            if (typeof yearDay === \"number\") {\r\n                start = new Date(+start + ((yearDay - 1) * 86400000));\r\n            }\r\n\r\n            else if (typeof week === \"number\") {\r\n\r\n                // getDay(): 0 - 6; Sun - Mon\r\n                const offset = [2, 1, 0, -1, -2, 4, 3][start.getDay()];\r\n\r\n                start.setDate(offset);\r\n\r\n                start = new Date(+start + ((week - 1) * 7 * 86400000));\r\n\r\n                if (typeof weekDay === \"number\") {\r\n                    start.setDate(start.getDate() + weekDay - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Handle Time Part (including fractions)\r\n        const {\r\n            hour,\r\n            minute = (hour % 1) * 60,\r\n            second =  (minute % 1) * 60,\r\n        } = this;\r\n        const millisecond = (second % 1) * 1000;\r\n\r\n        if (typeof hour === \"number\") {\r\n            start.setHours(hour);\r\n\r\n            if (typeof minute === \"number\") {\r\n                start.setMinutes(minute);\r\n\r\n                if (typeof second === \"number\") {\r\n                    start.setSeconds(second);\r\n\r\n                    if (typeof millisecond === \"number\") {\r\n                        start.setMilliseconds(millisecond);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Handle Time Zone\r\n        if (typeof this.zoneHour === \"number\") {\r\n            let offset = this.zoneHour * 60;\r\n\r\n            if (typeof this.zoneMinute === \"number\") {\r\n                offset += Math.sign(this.zoneHour) * this.zoneMinute;\r\n            }\r\n\r\n            const currOffset = start.getTimezoneOffset();\r\n            const delta = -(offset + currOffset) * 60 * 1000;\r\n\r\n            start.setTime(+start + delta);\r\n        }\r\n\r\n\r\n        return start;\r\n    }\r\n\r\n    get end () {\r\n        const end = new Date(this.start);\r\n\r\n        if (typeof this.second === \"number\") {\r\n            // Handle Fractions\r\n            if (this.second % 1) {\r\n                const [ denom ] = rationalise(this.second % 1);\r\n                const milliseconds = (1 / denom) * 1000;\r\n                end.setTime(+end.getTime() + milliseconds);\r\n            } else {\r\n                end.setSeconds(this.second + 1);\r\n            }\r\n        }\r\n        else if (typeof this.minute === \"number\") {\r\n            // Handle Fractions\r\n            if (this.minute % 1) {\r\n                const [ denom ] = rationalise(this.minute % 1);\r\n                const seconds = (1 / denom) * 60;\r\n                end.setTime(+end.getTime() + seconds * 1000);\r\n            } else {\r\n                end.setMinutes(this.minute + 1);\r\n            }\r\n        }\r\n        else if (typeof this.hour === \"number\") {\r\n            // Handle Fractions\r\n            if (this.hour % 1) {\r\n                const [ denom ] = rationalise(this.hour % 1);\r\n                const minutes = (1 / denom) * 60;\r\n                end.setTime(+end.getTime() + minutes * 60 * 1000);\r\n            } else {\r\n                end.setHours(this.hour + 1);\r\n            }\r\n        }\r\n        else if (typeof this.day === \"number\") {\r\n            end.setDate(this.day + 1);\r\n        }\r\n        else if (typeof this.month === \"number\") {\r\n            end.setMonth(this.month);\r\n        }\r\n        else if (typeof this.yearDay === \"number\") {\r\n            end.setDate(end.getDate() + 1);\r\n        }\r\n        else if (typeof this.weekDay === \"number\") {\r\n            end.setDate(end.getDate() + 1);\r\n        }\r\n        else if (typeof this.week === \"number\") {\r\n            end.setDate(end.getDate() + 7);\r\n        }\r\n        else if (typeof this.year === \"number\") {\r\n            end.setFullYear(this.year + 1);\r\n        }\r\n        else if (typeof this.decade === \"number\") {\r\n            end.setFullYear((this.decade + 1) * 10);\r\n        }\r\n        else if (typeof this.century === \"number\") {\r\n            end.setFullYear((this.century + 1) * 100);\r\n        }\r\n        else if (typeof this.millennium === \"number\") {\r\n            end.setFullYear((this.millennium + 1) * 1000);\r\n        }\r\n\r\n        return end;\r\n    }\r\n\r\n    toJSON () {\r\n        return ({\r\n            ...this,\r\n            start: this.start.toISOString(),\r\n            end: this.end.toISOString(),\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} input\r\n     * @returns {import(\".\").DateSpec & import(\".\").TimeSpec}\r\n     */\r\n    static parse (input) {\r\n\r\n        if (/T/.test(input)) {\r\n            const [dateInput, timeInput] = input.split(\"T\", 2);\r\n\r\n            const dateSpec = parseDate(dateInput);\r\n            const timeSpec = parseTime(timeInput);\r\n\r\n            // Both parts must be valid\r\n            if (dateSpec === null || timeSpec === null) {\r\n                return null;\r\n            }\r\n\r\n            // The date part must specify a specific day\r\n            if (typeof dateSpec.day !== \"number\"\r\n                && typeof dateSpec.weekDay !== \"number\"\r\n                && typeof dateSpec.yearDay !== \"number\"\r\n            ) {\r\n                return null\r\n            }\r\n\r\n            return { ...dateSpec, ...timeSpec };\r\n        }\r\n\r\n        return parseDate(input);\r\n    }\r\n}","/**\r\n * @param {string} input\r\n * @returns {import(\".\").DateTimePeriodSpec}\r\n */\r\nexport function parsePeriod(input) {\r\n    if (!/^P/.test(input)) {\r\n        return null;\r\n    }\r\n\r\n    const [datePart, timePart] = input.replace(/,/g,\".\").substr(1).split(\"T\");\r\n\r\n    const out = {};\r\n\r\n    let m = /(\\d+(?:\\.\\d+)?)Y/.exec(datePart);\r\n    if (m) {\r\n        out.years = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(datePart);\r\n    if (m) {\r\n        out.months = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)W/.exec(datePart);\r\n    if (m) {\r\n        out.weeks = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)D/.exec(datePart);\r\n    if (m) {\r\n        out.days = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)H/.exec(timePart);\r\n    if (m) {\r\n        out.hours = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(timePart);\r\n    if (m) {\r\n        out.minutes = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)S/.exec(timePart);\r\n    if (m) {\r\n        out.seconds = +m[1];\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { addDateTimeAndPeriod, subtractPeriodFromDateTime } from \"./calc\";\r\nimport { DateTime } from \"./DateTime\";\r\nimport { parseEndDate } from \"./parseEndDate\";\r\nimport { parsePeriod } from \"./parsePeriod\";\r\n\r\nexport class DateTimeInterval {\r\n    /** @type {?DateTime} */\r\n    first;\r\n    /** @type {?DateTime} */\r\n    last;\r\n    /** @type {?import(\".\").DateTimePeriodSpec} */\r\n    period;\r\n    /** @type {?number} */\r\n    repetitions;\r\n\r\n    /**\r\n     * @param {import(\".\").DateTimeIntervalSpec} options\r\n     */\r\n    constructor(options) {\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    get start () {\r\n        if (this.first) {\r\n            return this.first.start;\r\n        }\r\n\r\n        if (this.period && this.last) {\r\n            return subtractPeriodFromDateTime(this.period, this.last);\r\n        }\r\n\r\n        throw new Error(\"DateTimeInterval was underspecified\")\r\n    }\r\n\r\n    get end () {\r\n        if (this.last) {\r\n            return this.last.start;\r\n        }\r\n\r\n        if (this.first && this.period) {\r\n            return addDateTimeAndPeriod(this.first, this.period);\r\n        }\r\n\r\n        throw new Error(\"DateTimeInterval was underspecified\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} input\r\n     * @returns {import(\".\").DateTimeIntervalSpec}\r\n     */\r\n    static parse (input) {\r\n        let repetitions = 0;\r\n\r\n        const m = /^R(\\d*)\\//.exec(input);\r\n        if (m) {\r\n            if (m[1]) {\r\n                repetitions = +m[1];\r\n            } else {\r\n                repetitions = Infinity;\r\n            }\r\n\r\n            input = input.substr(m[0].length);\r\n        }\r\n\r\n        if (!/\\//.test(input)) {\r\n            // \"Invalid range \" + input;\r\n            return null;\r\n        }\r\n\r\n        const [partA, partB] = input.split(\"/\", 2);\r\n\r\n        const specA = DateTime.parse(partA);\r\n\r\n        if (specA) {\r\n            const first = new DateTime(specA);\r\n\r\n            const specB = parseEndDate(partB, first);\r\n\r\n            if (specB) {\r\n                const last = new DateTime(specB);\r\n                return { first, last, repetitions };\r\n            }\r\n\r\n            const period = parsePeriod(partB);\r\n\r\n            if (period) {\r\n                return { first, period, repetitions };\r\n            }\r\n\r\n            // \"Range part is not a valid period \" + partB;\r\n            return null;\r\n        }\r\n\r\n        // console.debug(e.message);\r\n\r\n        const period = parsePeriod(partA);\r\n\r\n        if (period) {\r\n            const specB = DateTime.parse(partB);\r\n\r\n            if (partB) {\r\n                const last = new DateTime(specB);\r\n\r\n                return { period, last, repetitions };\r\n            }\r\n        }\r\n\r\n        // \"Range part is not valid DateTime: \" + partB;\r\n        return null;\r\n    }\r\n}\r\n","import { parseDate } from \"./parseDate\";\r\nimport { parseTime } from \"./parseTime\";\r\nimport { getMonthLength } from \"./util\";\r\n\r\n/**\r\n * @param {string} input\r\n * @param {import('.').DateTime} startDate\r\n */\r\nexport function parseEndDate(input, startDate) {\r\n    let [maybeDatePart, timePart] = input.split(\"T\", 2);\r\n\r\n    /** @type {any} */\r\n    let candidate = Object.assign({}, startDate);\r\n\r\n    let m = /^(\\d{2})$/.exec(maybeDatePart);\r\n    if (m) {\r\n        let { year, month, day, hour, minute, second } = startDate;\r\n\r\n        const start = new Date(startDate.start);\r\n        const end = new Date(startDate.end);\r\n\r\n        if (!timePart) {\r\n            if (typeof second === \"number\") {\r\n                second = +m[1];\r\n\r\n                if (second > 61) {\r\n                    // \"Are you sure you want second to be \" + second;\r\n                    return null;\r\n                }\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                minute = +m[1];\r\n\r\n                if (minute > 60) {\r\n                    // \"Are you sure you want minute to be \" + minute;\r\n                    return null;\r\n                }\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n            } else if (typeof hour === \"number\") {\r\n                hour = +m[1];\r\n\r\n                if (hour > 23) {\r\n                    // \"Are you sure you want hout to be \" + hour;\r\n                    return null;\r\n                }\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour + 1);\r\n            } else if (typeof day === \"number\") {\r\n                day = +m[1];\r\n\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day < 1 || day > getMonthLength(start)) {\r\n                    // \"Are you sure you want day to be \" + day;\r\n                    return null;\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n\r\n                if (month < 1 || month > 12) {\r\n                    // \"Are you sure you want month to be \" + month;\r\n                    return null;\r\n                }\r\n\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n            } else {\r\n                // \"Invalid end date \" + maybeDatePart;\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (typeof day === \"number\") {\r\n                day = +m[1];\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day > getMonthLength(start)) {\r\n                    // \"Are you sure you want day to be \" + day;\r\n                    return null;\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n\r\n                if (month > 12) {\r\n                    // \"Are you sure you want month to be \" + month;\r\n                    return null;\r\n                }\r\n            } else {\r\n                // \"Invalid end date \" + maybeDatePart;\r\n                return null;\r\n            }\r\n        }\r\n\r\n        candidate = { year, month, day, hour, minute, second };\r\n    }\r\n    else {\r\n        m = /^(\\d{2})-(\\d{2})$/.exec(maybeDatePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = startDate;\r\n\r\n            const start = new Date(startDate.start);\r\n            const end = new Date(startDate.end);\r\n\r\n            if (typeof day !== \"number\" || typeof month !== \"number\") {\r\n                // \"Invalid end date \" + maybeDatePart;\r\n                return null;\r\n            }\r\n\r\n            month = +m[1];\r\n            day = +m[2];\r\n\r\n            start.setMonth(month - 1);\r\n            end.setMonth(month - 1);\r\n\r\n            start.setDate(day);\r\n            end.setDate(day + 1);\r\n\r\n            if (month < 1 || month > 12) {\r\n                // \"Are you sure you want month to be \" + month;\r\n                return null;\r\n            }\r\n\r\n            if (day < 1 || day > getMonthLength(start)) {\r\n                // \"Are you sure you want day to be \" + day;\r\n                return null;\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second };\r\n        } else {\r\n            const { year } = startDate;\r\n\r\n            m = /^\\d{3}$/.exec(maybeDatePart);\r\n            if (m && typeof year === \"number\") {\r\n                candidate = { year, yearDay: +m[0] };\r\n            }\r\n            else {\r\n                const spec = parseDate(maybeDatePart);\r\n                if (spec) {\r\n                    return spec;\r\n                }\r\n\r\n                timePart = maybeDatePart;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timePart) {\r\n        m = /^(\\d{2}):(\\d{2})$/.exec(timePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = candidate;\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            if (typeof second === \"number\") {\r\n                minute = +m[1];\r\n                second = +m[2];\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute);\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                hour = +m[1];\r\n                minute = +m[2];\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour);\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n\r\n                if (hour > 23) {\r\n                    // \"Are you sure you want hour to be \" + hour;\r\n                    return null;\r\n                }\r\n\r\n                if (minute > 60) {\r\n                    // \"Are you sure you want minute to be \" + minute;\r\n                    return null;\r\n                }\r\n            } else {\r\n                // \"Invalid end date \" + input;\r\n                return null;\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second };\r\n        } else {\r\n            const t = parseTime(timePart);\r\n\r\n            if (!t) {\r\n                return null;\r\n            }\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            start.setHours(t.hour);\r\n            end.setHours(t.hour);\r\n\r\n            start.setMinutes(t.minute);\r\n            end.setMinutes(t.minute);\r\n\r\n            start.setSeconds(t.second);\r\n            end.setSeconds(t.second + 1);\r\n\r\n            Object.assign(candidate, t);\r\n\r\n            if (t.hour > 23) {\r\n                // \"Are you sure you want hours to be \" + t.hour;\r\n                return null;\r\n            }\r\n\r\n            if (t.minute > 60) {\r\n                // \"Are you sure you want minutes to be \" + t.minute;\r\n                return null;\r\n            }\r\n\r\n            if (t.second > 61) {\r\n                // \"Are you sure you want seconds to be \" + t.second;\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return candidate;\r\n}\r\n","import { addDateAndPeriod } from \"./calc\";\r\n\r\n/**\r\n * @param {import(\".\").DateTimeInterval} value\r\n * @returns {Generator<import(\".\").DateTimeInterval>}\r\n */\r\n\r\n\r\nexport function* getIntervalInstances(value) {\r\n    let prevValue = {\r\n        start: value.start,\r\n        end: value.end,\r\n        period: value.period,\r\n        first: null,\r\n        last: null,\r\n        repetitions: 0,\r\n    };\r\n\r\n    // +1 because repetitions spec doesn't include the very start date or the end of the 0th period\r\n    for (let i = 0; i < value.repetitions + 1; i++) {\r\n        yield prevValue;\r\n        if (value.period) {\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: addDateAndPeriod(prevValue.end, value.period),\r\n                period: value.period,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        } else {\r\n            // Many errors due to leap days/seconds\r\n            // TODO: Implement {DateTime - DateTime = Period}\r\n            const delta = +prevValue.end - +prevValue.start;\r\n\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: new Date(+prevValue.end + delta),\r\n                period: null,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DateTimeInterval } from \"./DateTimeInterval\";\r\nimport { DateTime } from \"./DateTime\";\r\nimport { getIntervalInstances } from \"./intervals\";\r\nimport { isValidDate } from \"./util\";\r\n\r\nexport { DateTime, DateTimeInterval, isValidDate, getIntervalInstances };\r\n\r\n/**\r\n * @typedef DateSpec\r\n * @property {number} [millennium]\r\n * @property {number} [century]\r\n * @property {number} [decade]\r\n * @property {number} [year]\r\n * @property {number} [yearDay]\r\n * @property {number} [week]\r\n * @property {number} [weekDay]\r\n * @property {number} [month]\r\n * @property {number} [day]\r\n */\r\n\r\n/**\r\n * @typedef TimeSpec\r\n * @property {number} [hour]\r\n * @property {number} [minute]\r\n * @property {number} [second]\r\n * @property {number} [zoneHour]\r\n * @property {number} [zoneMinute]\r\n */\r\n\r\n/**\r\n * @typedef DateTimePeriodSpec\r\n * @property {number} [years]\r\n * @property {number} [months]\r\n * @property {number} [weeks]\r\n * @property {number} [days]\r\n * @property {number} [hours]\r\n * @property {number} [minutes]\r\n * @property {number} [seconds]\r\n */\r\n\r\n/**\r\n * @typedef DateTimeIntervalSpec\r\n * @property {DateTime} [first]\r\n * @property {DateTime} [last]\r\n * @property {DateTimePeriodSpec} [period]\r\n * @property {number} [repetitions]\r\n */\r\n\r\n\r\n/**\r\n * @param {string} input\r\n */\r\nexport function parse (input) {\r\n    const dateTimeSpec = DateTime.parse(input);\r\n    if (dateTimeSpec) {\r\n        return new DateTime(dateTimeSpec);\r\n    }\r\n\r\n    const dateTimeIntervalSpec = DateTimeInterval.parse(input);\r\n    if (dateTimeIntervalSpec) {\r\n        return new DateTimeInterval(dateTimeIntervalSpec);\r\n    }\r\n\r\n    // throw new Error(`Invalid input: '${input}' Parsing error: ${e.message}`);\r\n    return null;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport * as ISO8601 from \"../ISO8601\";\r\n\r\nexport default function ISO8601TestPage () {\r\n    const [ inputValue, setInputValue ] = useState(() => {\r\n        if (window.location.hash.length > 1) {\r\n            return window.location.hash.substr(1);\r\n        }\r\n        return \"\";\r\n    });\r\n    const testValues = [\"2\", \"20\", \"202\", \"2021\", \"2021-01\", \"2021-01-18\", \"2021-01-18T15\", \"2021-01-18T15:30\", \"2021-01-18T15:30:00\", \"2021-W03\", \"2021-W03-1\", \"2021-018\", \"20210623\", \"2021174\", \"2021W25\", \"2021W253\", \"2021-018T15\", \"2021-018T15:30\", \"2021-018T15:30:00\", \"2021-018T15:30:00.5\", \"2021051T10−05\", \"20210510TZ\", \"2021-018/P1M\", \"2021-018/P1DT1M\", \"R5/2021-018/P1W\", \"R3/2012-10-01T14:12:01/10T16:19:35\", \"R2/2012-10-01T14:12/12-10T16:19\", \"R2/2012-10-01T14:12:01/12-10T16:19\" ];\r\n\r\n    useEffect(() => {\r\n        const title = `ISO8601 - ${inputValue}`;\r\n        window.history.replaceState(null, title, `#${inputValue}`);\r\n        document.title = title;\r\n    }, [inputValue]);\r\n\r\n    useEffect(() => {\r\n        function cb () {\r\n            setInputValue(window.location.hash.substr(1));\r\n        }\r\n\r\n        window.addEventListener(\"hashchange\", cb);\r\n\r\n        return () => window.removeEventListener(\"hashchange\", cb);\r\n    }, []);\r\n\r\n    let convertedInput, error;\r\n\r\n    if (inputValue) {\r\n        convertedInput = ISO8601.parse(inputValue);\r\n        if (!convertedInput) {\r\n            error = \"Invalid Input: \" + inputValue;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: \"2em\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <input value={inputValue} onChange={e => setInputValue(e.target.value)} style={{margin:4,fontSize:\"1.5em\"}} placeholder=\"Input\" />\r\n            { error && <p style={{color:\"red\"}}>{error}</p> }\r\n            { convertedInput && <DateTimePreview value={convertedInput} label={`Input: ${inputValue}`} /> }\r\n            <h2>Test Values</h2>\r\n            {\r\n                testValues.map((v, i) => <DateTimePreview value={ISO8601.parse(v)} label={`Input: ${v}`} key={i} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {import(\"../ISO8601\").DateTime|import(\"../ISO8601\").DateTimeIntervalSpec} props.value\r\n * @param {string} [props.label]\r\n * @returns\r\n */\r\nfunction DateTimePreview ({ value, label = \"\" }) {\r\n    const [ showCode, setShowCode ] = useState(false);\r\n\r\n    // JUST FOR TESTING\r\n    if (!value) {\r\n        return <div style={{color:\"red\"}}>STILL TESTING</div>;\r\n    }\r\n\r\n    const pStyle = { margin: 0 };\r\n    const labelStyle = { ...pStyle, fontFamily: \"monospace\", color: \"#333\" };\r\n    const hintStyle = {color:\"#666\",fontSize:\"0.8em\"};\r\n    const boxStyle = { margin: 4, padding: 8, border: \"1px solid #333\", cursor: \"pointer\" };\r\n\r\n    const type = value instanceof ISO8601.DateTime ? \"DateTime\" : \"DateTimeInterval\";\r\n\r\n    const repetitions = value instanceof ISO8601.DateTimeInterval ? getRepetitions(value, 100) : [];\r\n\r\n    if (!ISO8601.isValidDate(value.start) || !ISO8601.isValidDate(value.end)) {\r\n        return <code style={{color:\"darkred\"}}>Javascript Date error {JSON.stringify(value)}</code>;\r\n    }\r\n\r\n    return (\r\n        <div style={boxStyle} onClick={() => setShowCode(!showCode)}>\r\n            { label && <p style={labelStyle}>{label}</p> }\r\n            <p style={pStyle}>\r\n                <time dateTime={toISOString(value.start)}>{dateFormat(value.start)}</time>\r\n                <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                <time dateTime={toISOString(value.end)}>{dateFormat(value.end)}</time>\r\n            </p>\r\n            {\r\n                repetitions.map((d,i) =>\r\n                    <p style={pStyle} key={i}>\r\n                        <time dateTime={toISOString(d.start)}>{dateFormat(d.start)}</time>\r\n                        <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                        <time dateTime={toISOString(d.end)}>{dateFormat(d.end)}</time>\r\n                        {' '}<span style={hintStyle}>({getOrdinal(i + 1)} Repetition)</span>\r\n                    </p>\r\n                )\r\n            }\r\n            { value instanceof ISO8601.DateTimeInterval && repetitions.length < value.repetitions &&\r\n                <p style={{...pStyle, ...hintStyle}}>&hellip; {value.repetitions - repetitions.length} more not shown</p>\r\n            }\r\n            { showCode && <code>{JSON.stringify(value)}</code> }\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {ISO8601.DateTimeIntervalSpec} value\r\n */\r\nfunction getRepetitions(value, maxRepetitions = 10) {\r\n    if (value.repetitions === Infinity) {\r\n        return generatorToArray(ISO8601.getIntervalInstances(value), maxRepetitions + 1).slice(1);\r\n    }\r\n\r\n    return [ ...ISO8601.getIntervalInstances(value) ].slice(1, 1 + maxRepetitions);\r\n}\r\n\r\nfunction getOrdinal (n) {\r\n    if (n === 11 || n === 12 || n === 13) return `${n}th`;\r\n    if (n % 10 === 1) return `${n}st`;\r\n    if (n % 10 === 2) return `${n}nd`;\r\n    if (n % 10 === 3) return `${n}rd`;\r\n    return `${n}th`;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {Generator<T, void, unknown>} generator\r\n * @param {number} maxLength\r\n * @returns {T[]}\r\n */\r\nfunction generatorToArray (generator, maxLength) {\r\n    const list = [];\r\n    let i = 0;\r\n\r\n    while (i++ < maxLength) {\r\n        const result = generator.next();\r\n\r\n        if (!result.done && typeof result.value !== \"undefined\") {\r\n            list.push(result.value);\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * Intl.DateTimeFormat is so finicky about negative years and super positive years.\r\n * @param {Date} date\r\n */\r\n function dateFormat (date) {\r\n    if (!ISO8601.isValidDate(date)) {\r\n        return <code style={{color:\"darkred\"}}>Javascript Date error</code>;\r\n    }\r\n\r\n    if (date.getFullYear() < 0)\r\n        return toISOString(date);\r\n\r\n    try {\r\n        const formatter = new Intl.DateTimeFormat([], { dateStyle: \"long\", timeStyle: \"long\" });\r\n        return formatter.format(date);\r\n    } catch (e) {\r\n        return toISOString(date);\r\n    }\r\n}\r\n\r\n/**\r\n * Date.prototype.toISOString also doesn't like really large dates\r\n * @param {Date} date\r\n */\r\nfunction toISOString (date) {\r\n    if (!ISO8601.isValidDate(date)) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        return date.toISOString();\r\n    } catch (e) {\r\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date.getDate().toString().padStart(2, \"0\")}`;\r\n    }\r\n}","import ISO8601TestPage from './Pages/ISO8601TestPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ISO8601TestPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}