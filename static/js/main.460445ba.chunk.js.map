{"version":3,"sources":["ISO8601.js","Pages/ISO8601TestPage.js","App.js","index.js"],"names":["getIntervalInstances","DateTimeSpec","input","relativeTo","Object","assign","this","parseEndDate","test","split","dateInput","timeInput","dt","parseTime","parseDate","day","yearDay","weekDay","Error","hour","end","setDate","start","getDate","setHours","minute","setMinutes","second","setSeconds","setMilliseconds","getMilliseconds","zoneHour","offset","zoneMinute","Math","sign","currOffset","getTimezoneOffset","delta","setTime","DateTimeIntervalSpec","first","last","period","repetitions","m","exec","Infinity","substr","length","partA","partB","e","parsePeriod","addDateTimeAndPeriod","subtractPeriodFromDateTime","parse","Date","setFullYear","millennium","century","decade","year","month","week","s","getDay","getFullYear","weekYear","getMonth","startDate","maybeDatePart","timePart","candidate","getMonthLength","setMonth","t","out","replace","datePart","years","months","weeks","days","hours","minutes","seconds","dateTime","addDateAndPeriod","date","d","rem","getHours","getMinutes","getSeconds","y","value","prevValue","i","ISO8601TestPage","convertedInput","error","useState","window","location","hash","inputValue","setInputValue","useEffect","title","history","replaceState","document","cb","addEventListener","removeEventListener","ISO8601","message","style","padding","display","flexDirection","onChange","target","margin","fontSize","placeholder","color","DateTimePreview","label","map","v","showCode","setShowCode","pStyle","labelStyle","fontFamily","hintStyle","type","maxRepetitions","generatorToArray","slice","getRepetitions","isValidDate","border","cursor","onClick","toISOString","dateFormat","getOrdinal","JSON","stringify","n","generator","maxLength","list","result","next","done","push","isNaN","Intl","DateTimeFormat","dateStyle","timeStyle","format","toString","padStart","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.460445ba.chunk.js","sourcesContent":["export class DateTimeSpec {\r\n    /** @type {?number} */\r\n    millennium;\r\n    /** @type {?number} */\r\n    century;\r\n    /** @type {?number} */\r\n    decade;\r\n    /** @type {?number} */\r\n    year;\r\n    /** @type {?number} */\r\n    month;\r\n    /** @type {?number} */\r\n    day;\r\n    /** @type {?number} */\r\n    hour;\r\n    /** @type {?number} */\r\n    minute;\r\n    /** @type {?number} */\r\n    second;\r\n    /** @type {?number} */\r\n    zoneHour;\r\n    /** @type {?number} */\r\n    zoneMinute;\r\n    /** @type {?number} */\r\n    weekYear;\r\n    /** @type {?number} */\r\n    week;\r\n    /** @type {?number} */\r\n    yearDay;\r\n    /** @type {Date} */\r\n    start;\r\n    /** @type {Date} */\r\n    end;\r\n\r\n    /**\r\n     *\r\n     * @param {string} input\r\n     * @param {DateTimeSpec} relativeTo\r\n     */\r\n    constructor (input, relativeTo = null) {\r\n        if (relativeTo) {\r\n            return Object.assign(this, parseEndDate(input, relativeTo));\r\n        }\r\n\r\n        // if (/^T/.test(input)) {\r\n        //     return Object.assign(this, { ...parseTime(input.substr(1)), start: null, end: null });\r\n        // }\r\n\r\n        if (/T/.test(input)) {\r\n            const [dateInput, timeInput] = input.split(\"T\", 2);\r\n\r\n            const dt = {\r\n                ...parseTime(timeInput),\r\n                ...parseDate(dateInput),\r\n            };\r\n\r\n            if (typeof dt.day !== \"number\"\r\n                && typeof dt.yearDay !== \"number\"\r\n                && typeof dt.weekDay !== \"number\"\r\n            ) {\r\n                // We didn't have a single day specified so a time is invalid\r\n                throw new Error(\"Invalid data time format \" + input);\r\n            }\r\n\r\n            if (typeof dt.hour === \"number\") {\r\n                // Since we have a time we'll reset the parsed date back to the same for start/end\r\n                dt.end.setDate(dt.start.getDate());\r\n\r\n                dt.start.setHours(dt.hour);\r\n\r\n                // Now start finding what granularity was provided\r\n                if (typeof dt.minute === \"number\") {\r\n                    dt.end.setHours(dt.hour);\r\n                    dt.start.setMinutes(dt.minute);\r\n\r\n                    if (typeof dt.second === \"number\") {\r\n                        dt.end.setMinutes(dt.minute);\r\n\r\n                        dt.start.setSeconds(dt.second);\r\n                        if (dt.second % 1) {\r\n                            dt.start.setMilliseconds((dt.second % 1) * 1000);\r\n                            dt.end.setMilliseconds(dt.start.getMilliseconds() + 1);\r\n                        } else {\r\n                            dt.end.setSeconds(dt.second + 1);\r\n                        }\r\n                    } else {\r\n                        dt.end.setMinutes(dt.minute + 1);\r\n                    }\r\n                } else {\r\n                    dt.end.setHours(dt.hour + 1);\r\n                }\r\n            }\r\n\r\n            if (typeof dt.zoneHour === \"number\") {\r\n                let offset = 0;\r\n                if (typeof dt.zoneMinute === \"number\") {\r\n                    offset = dt.zoneHour * 60 + Math.sign(dt.zoneHour) * dt.zoneMinute;\r\n                } else {\r\n                    offset = dt.zoneHour * 60;\r\n                }\r\n\r\n                const currOffset = dt.start.getTimezoneOffset();\r\n                const delta = -(offset + currOffset) * 60 * 1000;\r\n\r\n                dt.start.setTime(+dt.start + delta);\r\n                dt.end.setTime(+dt.end + delta);\r\n            }\r\n\r\n            return Object.assign(this, dt);\r\n        }\r\n\r\n        // if (/:/.test(input)) {\r\n        //     return Object.assign(this, { ...parseTime(input), start: null, end: null });\r\n        // }\r\n\r\n        return Object.assign(this, parseDate(input));\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef TimeSpec\r\n * @property {number} [hour]\r\n * @property {number} [minute]\r\n * @property {number} [second]\r\n * @property {number} [zoneHour]\r\n * @property {number} [zoneMinute]\r\n */\r\n\r\n/**\r\n * @typedef DateTimePeriodSpec\r\n * @property {number} [years]\r\n * @property {number} [months]\r\n * @property {number} [weeks]\r\n * @property {number} [days]\r\n * @property {number} [hours]\r\n * @property {number} [minutes]\r\n * @property {number} [seconds]\r\n */\r\n\r\nexport class DateTimeIntervalSpec {\r\n    /** @type {?DateTimeSpec} */\r\n    first = null;\r\n    /** @type {?DateTimeSpec} */\r\n    last = null;\r\n    /** @type {?DateTimePeriodSpec} */\r\n    period = null;\r\n    /** @type {?number} */\r\n    repetitions = 0;\r\n    /** @type {Date} */\r\n    start;\r\n    /** @type {?Date} */\r\n    end = null;\r\n\r\n    /**\r\n     * @param {string} input\r\n     */\r\n    constructor (input) {\r\n        const m = /^R(\\d*)\\//.exec(input);\r\n        if(m) {\r\n            if (m[1]) {\r\n                this.repetitions = +m[1];\r\n            } else {\r\n                this.repetitions = Infinity;\r\n            }\r\n\r\n            input = input.substr(m[0].length);\r\n        }\r\n\r\n        if (!/\\//.test(input)) {\r\n            throw new Error(\"Invalid range \" + input);\r\n        }\r\n\r\n        const [partA, partB] = input.split(\"/\", 2);\r\n\r\n        try {\r\n            const first = new DateTimeSpec(partA);\r\n\r\n            try {\r\n                const last = new DateTimeSpec(partB, first);\r\n\r\n                return Object.assign(this, { first, last, start: first.start, end: last.start });\r\n            } catch (e) {\r\n                try {\r\n                    const period = parsePeriod(partB);\r\n\r\n                    return Object.assign(this, { first, period, start: first.start, end: addDateTimeAndPeriod(first, period) });\r\n                }\r\n                catch (e) {\r\n                    throw new Error(\"Invalid range part \" + partB);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            try {\r\n                const period = parsePeriod(partA);\r\n\r\n                try {\r\n                    const last = new DateTimeSpec(partB);\r\n\r\n                    return Object.assign(this, { period, last, start: subtractPeriodFromDateTime(period, last), end: last.end });\r\n                } catch (e) {\r\n                    throw new Error(\"Invalid range part \" + partB);\r\n                }\r\n            } catch (e) {\r\n                throw new Error(\"Invalid range part \" + partA);\r\n            }\r\n        }\r\n\r\n        // unreachable\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n */\r\nexport function parse (input) {\r\n    try {\r\n        return new DateTimeSpec(input);\r\n    } catch (e) {}\r\n\r\n    try {\r\n        return new DateTimeIntervalSpec(input);\r\n    } catch (e) {}\r\n\r\n    throw new Error(\"Invalid input \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n */\r\nfunction parseDate (input) {\r\n    if (/^\\d$/.test(input)) {\r\n        const start = new Date(+input * 1000, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 1000);\r\n\r\n        const end = new Date((+input + 1) * 1000, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 1000);\r\n\r\n        return {\r\n            millennium: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    if (/^\\d\\d$/.test(input)) {\r\n        const start = new Date(+input * 100, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 100);\r\n\r\n        const end = new Date((+input + 1) * 100, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 100);\r\n\r\n        return {\r\n            century: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    if (/^\\d{3}$/.test(input)) {\r\n        const start = new Date(+input * 10, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(+input * 10);\r\n\r\n        const end = new Date((+input + 1) * 10, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear((+input + 1) * 10);\r\n\r\n        return {\r\n            decade: +input,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    // Check for four or more digit year\r\n    let m = /^([+-]\\d{4,}|\\d{4})/.exec(input);\r\n\r\n    if (!m) {\r\n        throw new Error(\"Invalid date format (bad year) \" + input);\r\n    }\r\n\r\n    const year = +m[0];\r\n    input = input.substr(m[0].length);\r\n\r\n    if (input.length === 0) {\r\n        const start = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year + 1, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year + 1);\r\n\r\n        return {\r\n            year,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const month = +m[1];\r\n\r\n        if (month < 1 || month > 12) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const start = new Date(year, month - 1, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year, month, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year);\r\n\r\n        return {\r\n            year,\r\n            month,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-?(\\d{2})-?(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        const month = +m[1];\r\n        const day = +m[2];\r\n\r\n        if (month < 1 || month > 12) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const start = new Date(year, month - 1, day);\r\n        // Catch date constructor problems with years 0 to 99\r\n        start.setFullYear(year);\r\n\r\n        const end = new Date(year, month - 1, day + 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        end.setFullYear(year);\r\n\r\n        // Weed out dates past the end of the month\r\n        if (start.getDate() !== day) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            year,\r\n            month,\r\n            day,\r\n            start,\r\n            end,\r\n        };\r\n    }\r\n\r\n    m = /^-?W(\\d{2})$/.exec(input);\r\n    if (m) {\r\n\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        // getDay(): 0 - 6; Sun - Mon\r\n        const offset = [2, 1, 0, -1, -2, 4, 3][s.getDay()];\r\n\r\n        s.setDate(offset);\r\n\r\n        const start = new Date(+s + ((week - 1) * 7 * 86400000));\r\n\r\n        if (week === 53 && start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            weekYear: year,\r\n            week,\r\n            start,\r\n            end: new Date(start.getFullYear(), start.getMonth(), start.getDate() + 7),\r\n        };\r\n    }\r\n\r\n    m = /^-?W(\\d{2})-?(\\d)$/.exec(input);\r\n    if (m) {\r\n        const week = +m[1];\r\n        if (week < 1 || week > 53) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const weekDay = +m[2];\r\n        if (weekDay < 1 || weekDay > 7) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        // getDay(): 0 - 6; Sun - Mon\r\n        const offset = [2, 1, 0, -1, -2, 4, 3][s.getDay()];\r\n\r\n        s.setDate(offset);\r\n\r\n        const start = new Date(+s + ((week - 1) * 7 * 86400000));\r\n\r\n        start.setDate(start.getDate() + weekDay - 1);\r\n\r\n        if (week === 53 && start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            weekYear: year,\r\n            week,\r\n            weekDay,\r\n            start,\r\n            end: new Date(start.getFullYear(), start.getMonth(), start.getDate() + 1),\r\n        };\r\n    }\r\n\r\n    m = /^-?(\\d{3})$/.exec(input);\r\n    if (m) {\r\n        const s = new Date(year, 0, 1);\r\n        // Catch date constructor problems with years 0 to 99\r\n        s.setFullYear(year);\r\n\r\n        const yearDay = +m[1];\r\n\r\n        if (yearDay < 1 || yearDay > 366) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        const start = new Date(+s + ((yearDay - 1) * 86400000));\r\n\r\n        // Weed out invalid -366 days\r\n        if (start.getFullYear() !== year) {\r\n            throw new Error(\"Invalid date format \" + input);\r\n        }\r\n\r\n        return {\r\n            year,\r\n            yearDay,\r\n            start,\r\n            end: new Date(year, start.getMonth(), start.getDate() + 1),\r\n        };\r\n    }\r\n\r\n    throw new Error(\"Invalid date format \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @param {DateTimeSpec} startDate\r\n */\r\nfunction parseEndDate (input, startDate) {\r\n    let [ maybeDatePart, timePart ] = input.split(\"T\", 2);\r\n\r\n    /** @type {any} */\r\n    let candidate = Object.assign({}, startDate);\r\n\r\n    let m = /^(\\d{2})$/.exec(maybeDatePart);\r\n    if (m) {\r\n        let { year, month, day, hour, minute, second } = startDate;\r\n\r\n        const start = new Date(startDate.start);\r\n        const end = new Date(startDate.end);\r\n\r\n        if (!timePart) {\r\n            if (typeof second === \"number\") {\r\n                second = +m[1];\r\n\r\n                if (second > 61) {\r\n                    throw new Error(\"Are you sure you want second to be \" + second);\r\n                }\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                minute = +m[1];\r\n\r\n                if (minute > 60) {\r\n                    throw new Error(\"Are you sure you want minute to be \" + minute);\r\n                }\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n            } else if (typeof hour === \"number\") {\r\n                hour = +m[1];\r\n\r\n                if (hour > 23) {\r\n                    throw new Error(\"Are you sure you want hout to be \" + hour);\r\n                }\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour + 1);\r\n            } else if (typeof day === \"number\") {\r\n                day = +m[1];\r\n\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day > getMonthLength(start)) {\r\n                    throw new Error(\"Are you sure you want day to be \" + day);\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n\r\n                if (month > 12) {\r\n                    throw new Error(\"Are you sure you want month to be \" + month);\r\n                }\r\n\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n        }\r\n        else {\r\n            if (typeof day === \"number\") {\r\n                day = +m[1];\r\n                start.setDate(day);\r\n                end.setDate(day + 1);\r\n\r\n                if (day > getMonthLength(start)) {\r\n                    throw new Error(\"Are you sure you want day to be \" + day);\r\n                }\r\n            } else if (typeof month === \"number\") {\r\n                month = +m[1];\r\n                start.setMonth(month - 1);\r\n                end.setMonth(month);\r\n\r\n                if (month > 12) {\r\n                    throw new Error(\"Are you sure you want month to be \" + month);\r\n                }\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n        }\r\n\r\n        candidate = { year, month, day, hour, minute, second, start, end };\r\n    }\r\n    else {\r\n        m = /^(\\d{2})-(\\d{2})$/.exec(maybeDatePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = startDate;\r\n\r\n            const start = new Date(startDate.start);\r\n            const end = new Date(startDate.end);\r\n\r\n            if (typeof day !== \"number\" || typeof month !== \"number\") {\r\n                throw new Error(\"Invalid end date \" + maybeDatePart);\r\n            }\r\n\r\n            month = +m[1];\r\n            day = +m[2];\r\n\r\n            start.setMonth(month - 1);\r\n            end.setMonth(month - 1);\r\n\r\n            start.setDate(day);\r\n            end.setDate(day + 1);\r\n\r\n            if (month > 12) {\r\n                throw new Error(\"Are you sure you want month to be \" + month);\r\n            }\r\n\r\n            if (day > getMonthLength(start)) {\r\n                throw new Error(\"Are you sure you want day to be \" + day);\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second, start, end };\r\n        } else {\r\n            try {\r\n                return parseDate(maybeDatePart);\r\n            } catch (e) {}\r\n\r\n            timePart = maybeDatePart;\r\n        }\r\n    }\r\n\r\n    if (timePart) {\r\n        m = /^(\\d{2}):(\\d{2})$/.exec(timePart);\r\n        if (m) {\r\n            let { year, month, day, hour, minute, second } = candidate;\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            if (typeof second === \"number\") {\r\n                minute = +m[1];\r\n                second = +m[2];\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute);\r\n\r\n                start.setSeconds(second);\r\n                end.setSeconds(second + 1);\r\n            } else if (typeof minute === \"number\") {\r\n                hour = +m[1];\r\n                minute = +m[2];\r\n\r\n                start.setHours(hour);\r\n                end.setHours(hour);\r\n\r\n                start.setMinutes(minute);\r\n                end.setMinutes(minute + 1);\r\n\r\n                if (hour > 23) {\r\n                    throw new Error(\"Are you sure you want hour to be \" + hour);\r\n                }\r\n\r\n                if (minute > 60) {\r\n                    throw new Error(\"Are you sure you want minute to be \" + minute);\r\n                }\r\n            } else {\r\n                throw new Error(\"Invalid end date \" + input);\r\n            }\r\n\r\n            candidate = { year, month, day, hour, minute, second, start, end };\r\n        } else {\r\n            const t = parseTime(timePart);\r\n\r\n            const start = new Date(candidate.start);\r\n            const end = new Date(candidate.end);\r\n\r\n            start.setHours(t.hour);\r\n            end.setHours(t.hour);\r\n\r\n            start.setMinutes(t.minute);\r\n            end.setMinutes(t.minute);\r\n\r\n            start.setSeconds(t.second);\r\n            end.setSeconds(t.second + 1);\r\n\r\n            Object.assign(candidate, t, { start, end });\r\n\r\n            if (t.hour > 23) {\r\n                throw new Error(\"Are you sure you want hours to be \" + t.hour);\r\n            }\r\n\r\n            if (t.minute > 60) {\r\n                throw new Error(\"Are you sure you want minutes to be \" + t.minute);\r\n            }\r\n\r\n            if (t.second > 61) {\r\n                throw new Error(\"Are you sure you want seconds to be \" + t.second);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (candidate) {\r\n        return candidate;\r\n    }\r\n\r\n    return new DateTimeSpec(input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @returns {TimeSpec}\r\n */\r\nfunction parseTime (input) {\r\n    let m;\r\n\r\n    let out = {};\r\n\r\n    m = /(?:([+−-]\\d\\d)(?::?(\\d\\d))?|Z)$/.exec(input);\r\n\r\n    if (m) {\r\n        if (m[1]) {\r\n            out.zoneHour = +m[1].replace(\"−\", \"-\");\r\n\r\n            if (m[2]) {\r\n                out.zoneMinute = +m[2];\r\n            }\r\n        } else {\r\n            // We must have had \"Z\"\r\n            out.zoneHour = 0;\r\n            out.zoneMinute = 0;\r\n        }\r\n\r\n        input = input.substr(0, input.length - m[0].length);\r\n    }\r\n\r\n    // Support 20210623TZ\r\n    if (m && input.length == 0) {\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d{2}):?(\\d{2})$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n        out.minute = +m[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    m = /^(\\d{2}):?(\\d{2}):?(\\d\\d(?:\\.\\d+)?)$/.exec(input);\r\n    if (m) {\r\n        out.hour = +m[1];\r\n        out.minute = +m[2];\r\n        out.second = +m[3];\r\n\r\n        return out;\r\n    }\r\n\r\n    throw new Error(\"Invalid time format \" + input);\r\n}\r\n\r\n/**\r\n * @param {string} input\r\n * @returns {DateTimePeriodSpec}\r\n */\r\nfunction parsePeriod (input) {\r\n    if (!/^P/.test(input)) {\r\n        throw new Error(\"Invalid period \" + input);\r\n    }\r\n\r\n    const [datePart, timePart] = input.substr(1).split(\"T\");\r\n\r\n    const out = {};\r\n\r\n    let m = /(\\d+(?:\\.\\d+)?)Y/.exec(datePart);\r\n    if (m) {\r\n        out.years = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(datePart);\r\n    if (m) {\r\n        out.months = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)W/.exec(datePart);\r\n    if (m) {\r\n        out.weeks = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)D/.exec(datePart);\r\n    if (m) {\r\n        out.days = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)H/.exec(timePart);\r\n    if (m) {\r\n        out.hours = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)M/.exec(timePart);\r\n    if (m) {\r\n        out.minutes = +m[1];\r\n    }\r\n\r\n    m = /(\\d+(?:\\.\\d+)?)S/.exec(timePart);\r\n    if (m) {\r\n        out.seconds = +m[1];\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n *\r\n * @param {DateTimeSpec} dateTime\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\nexport function addDateTimeAndPeriod (dateTime, period) {\r\n    return addDateAndPeriod(dateTime.start, period);\r\n}\r\n/**\r\n *\r\n * @param {Date} date\r\n * @param {DateTimePeriodSpec} period\r\n * @returns {Date}\r\n */\r\nexport function addDateAndPeriod (date, period) {\r\n    const d = new Date(date);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() + period.years);\r\n\r\n        const rem = period.years % 1;\r\n        if (rem) {\r\n            d.setMonth(d.getMonth() + rem * 12);\r\n        }\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() + period.months);\r\n\r\n        const rem = period.months % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * getMonthLength(d));\r\n        }\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() + period.weeks * 7);\r\n\r\n        const rem = period.weeks % 1;\r\n        if (rem) {\r\n            d.setDate(d.getDate() + rem * 7);\r\n        }\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() + period.days);\r\n\r\n        const rem = period.days % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 24 * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() + period.hours);\r\n\r\n        const rem = period.hours % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() + period.minutes);\r\n\r\n        const rem = period.minutes % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() + period.seconds);\r\n\r\n        const rem = period.seconds % 1;\r\n        if (rem) {\r\n            d.setTime(+d + rem * 1000);\r\n        }\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n * @param {Date} date\r\n */\r\nfunction getMonthLength (date) {\r\n    const m = date.getMonth();\r\n\r\n    if (m === 1) {\r\n        const y = date.getFullYear();\r\n\r\n        return (y % 400 === 0 || (y % 4 === 0 && y % 100 !== 0)) ? 29 : 28;\r\n    }\r\n\r\n    return [31,0,31,30,31,30,31,31,30,31,30,31][m];\r\n}\r\n\r\n/**\r\n *\r\n * @param {DateTimePeriodSpec} period\r\n * @param {DateTimeSpec} dateTime\r\n * @returns {Date}\r\n */\r\nfunction subtractPeriodFromDateTime (period, dateTime) {\r\n    const d = new Date(dateTime.start);\r\n\r\n    if (period.years) {\r\n        d.setFullYear(d.getFullYear() - period.years);\r\n    }\r\n\r\n    if (period.months) {\r\n        d.setMonth(d.getMonth() - period.months);\r\n    }\r\n\r\n    if (period.weeks) {\r\n        d.setDate(d.getDate() - period.weeks * 7);\r\n    }\r\n\r\n    if (period.days) {\r\n        d.setDate(d.getDate() - period.days);\r\n    }\r\n\r\n    if (period.hours) {\r\n        d.setHours(d.getHours() - period.hours);\r\n    }\r\n\r\n    if (period.minutes) {\r\n        d.setMinutes(d.getMinutes() - period.minutes);\r\n    }\r\n\r\n    if (period.seconds) {\r\n        d.setSeconds(d.getSeconds() - period.seconds);\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n * @param {DateTimeIntervalSpec} value\r\n * @returns {Generator<DateTimeIntervalSpec>}\r\n */\r\nexport function* getIntervalInstances (value) {\r\n    let prevValue = {\r\n        start: value.start,\r\n        end: value.end,\r\n        period: value.period,\r\n        first: null,\r\n        last: null,\r\n        repetitions: 0,\r\n    };\r\n\r\n    // +1 because repetitions spec doesn't include the very start date or the end of the 0th period\r\n    for (let i = 0; i < value.repetitions + 1; i++) {\r\n        yield prevValue;\r\n        if (value.period) {\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: addDateAndPeriod(prevValue.end, value.period),\r\n                period: value.period,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        } else {\r\n            // Many errors due to leap days/seconds\r\n            // TODO: Implement {DateTime - DateTime = Period}\r\n            const delta = +prevValue.end - +prevValue.start;\r\n\r\n            prevValue = {\r\n                start: prevValue.end,\r\n                end: new Date(+prevValue.end + delta),\r\n                period: null,\r\n                first: null,\r\n                last: null,\r\n                repetitions: null,\r\n            };\r\n        }\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport * as ISO8601 from \"../ISO8601\";\r\nimport { DateTimeIntervalSpec, DateTimeSpec, getIntervalInstances } from \"../ISO8601\";\r\n\r\nexport default function ISO8601TestPage () {\r\n    const [ inputValue, setInputValue ] = useState(() => {\r\n        if (window.location.hash.length > 1) {\r\n            return window.location.hash.substr(1);\r\n        }\r\n        return \"\";\r\n    });\r\n    const testValues = [\"2\", \"20\", \"202\", \"2021\", \"2021-01\", \"2021-01-18\", \"2021-01-18T15\", \"2021-01-18T15:30\", \"2021-01-18T15:30:00\", \"2021-W03\", \"2021-W03-1\", \"2021-018\", \"20210623\", \"2021174\", \"2021W25\", \"2021W253\", \"2021-018T15\", \"2021-018T15:30\", \"2021-018T15:30:00\", \"2021-018T15:30:00.5\", \"2021051T10−05\", \"20210510TZ\", \"2021-018/P1M\", \"2021-018/P1DT1M\", \"R5/2021-018/P1W\", \"R3/2012-10-01T14:12:01/10T16:19:35\", \"R2/2012-10-01T14:12/12-10T16:19\", \"R2/2012-10-01T14:12:01/12-10T16:19\" ];\r\n\r\n    useEffect(() => {\r\n        const title = `ISO8601 - ${inputValue}`;\r\n        window.history.replaceState(null, title, `#${inputValue}`);\r\n        document.title = title;\r\n    }, [inputValue]);\r\n\r\n    useEffect(() => {\r\n        function cb () {\r\n            setInputValue(window.location.hash.substr(1));\r\n        }\r\n\r\n        window.addEventListener(\"hashchange\", cb);\r\n\r\n        return () => window.removeEventListener(\"hashchange\", cb);\r\n    }, []);\r\n\r\n    let convertedInput, error;\r\n\r\n    if (inputValue) {\r\n        try {\r\n            convertedInput = ISO8601.parse(inputValue);\r\n        } catch (e) {\r\n            error = e.message;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: \"2em\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <input value={inputValue} onChange={e => setInputValue(e.target.value)} style={{margin:4,fontSize:\"1.5em\"}} placeholder=\"Input\" />\r\n            { error && <p style={{color:\"red\"}}>{error}</p> }\r\n            { convertedInput && <DateTimePreview value={convertedInput} label={`Input: ${inputValue}`} /> }\r\n            <h2>Test Values</h2>\r\n            {\r\n                testValues.map((v, i) => <DateTimePreview value={ISO8601.parse(v)} label={`Input: ${v}`} key={i} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {import(\"../ISO8601\").DateTimeSpec|import(\"../ISO8601\").DateTimeIntervalSpec} props.value\r\n * @param {string} [props.label]\r\n * @returns\r\n */\r\nfunction DateTimePreview ({ value, label = \"\" }) {\r\n    const [ showCode, setShowCode ] = useState(false);\r\n\r\n    const pStyle = { margin: 0 };\r\n    const labelStyle = { ...pStyle, fontFamily: \"monospace\", color: \"#333\" };\r\n    const hintStyle = {color:\"#666\",fontSize:\"0.8em\"};\r\n    const boxStyle = { margin: 4, padding: 8, border: \"1px solid #333\", cursor: \"pointer\" };\r\n\r\n    const type = value instanceof DateTimeSpec ? \"DateTime\" : \"DateTimeInterval\";\r\n\r\n    const repetitions = value instanceof DateTimeIntervalSpec ? getRepetitions(value, 100) : [];\r\n\r\n    if (!isValidDate(value.start) || !isValidDate(value.end)) {\r\n        return <code style={{color:\"darkred\"}}>Javascript Date error {JSON.stringify(value)}</code>;\r\n    }\r\n\r\n    return (\r\n        <div style={boxStyle} onClick={() => setShowCode(!showCode)}>\r\n            { label && <p style={labelStyle}>{label}</p> }\r\n            <p style={pStyle}>\r\n                <time dateTime={toISOString(value.start)}>{dateFormat(value.start)}</time>\r\n                <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                <time dateTime={toISOString(value.end)}>{dateFormat(value.end)}</time>\r\n            </p>\r\n            {\r\n                repetitions.map((d,i) =>\r\n                    <p style={pStyle} key={i}>\r\n                        <time dateTime={toISOString(d.start)}>{dateFormat(d.start)}</time>\r\n                        <span style={hintStyle}> ≤ {type} &lt; </span>\r\n                        <time dateTime={toISOString(d.end)}>{dateFormat(d.end)}</time>\r\n                        {' '}<span style={hintStyle}>({getOrdinal(i + 1)} Repetition)</span>\r\n                    </p>\r\n                )\r\n            }\r\n            { value instanceof DateTimeIntervalSpec && repetitions.length < value.repetitions &&\r\n                <p style={{...pStyle, ...hintStyle}}>&hellip; {value.repetitions - repetitions.length} more not shown</p>\r\n            }\r\n            { showCode && <code>{JSON.stringify(value)}</code> }\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {ISO8601.DateTimeIntervalSpec} value\r\n */\r\nfunction getRepetitions(value, maxRepetitions = 10) {\r\n    if (value.repetitions === Infinity) {\r\n        return generatorToArray(getIntervalInstances(value), maxRepetitions + 1).slice(1);\r\n    }\r\n\r\n    return [ ...ISO8601.getIntervalInstances(value) ].slice(1, 1 + maxRepetitions);\r\n}\r\n\r\nfunction getOrdinal (n) {\r\n    if (n === 11 || n === 12 || n === 13) return `${n}th`;\r\n    if (n % 10 === 1) return `${n}st`;\r\n    if (n % 10 === 2) return `${n}nd`;\r\n    if (n % 10 === 3) return `${n}rd`;\r\n    return `${n}th`;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {Generator<T, void, unknown>} generator\r\n * @param {number} maxLength\r\n * @returns {T[]}\r\n */\r\nfunction generatorToArray (generator, maxLength) {\r\n    const list = [];\r\n    let i = 0;\r\n\r\n    while (i++ < maxLength) {\r\n        const result = generator.next();\r\n\r\n        if (!result.done && typeof result.value !== \"undefined\") {\r\n            list.push(result.value);\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * @param {Date} date\r\n */\r\nfunction isValidDate (date) {\r\n    return date instanceof Date && !isNaN(+date);\r\n}\r\n\r\n/**\r\n * Intl.DateTimeFormat is so finicky about negative years and super positive years.\r\n * @param {Date} date\r\n */\r\n function dateFormat (date) {\r\n    if (!isValidDate(date)) {\r\n        return <code style={{color:\"darkred\"}}>Javascript Date error</code>;\r\n    }\r\n\r\n    if (date.getFullYear() < 0)\r\n        return toISOString(date);\r\n\r\n    try {\r\n        const formatter = new Intl.DateTimeFormat([], { dateStyle: \"long\", timeStyle: \"long\" });\r\n        return formatter.format(date);\r\n    } catch (e) {\r\n        return toISOString(date);\r\n    }\r\n}\r\n\r\n/**\r\n * Date.prototype.toISOString also doesn't like really large dates\r\n * @param {Date} date\r\n */\r\nfunction toISOString (date) {\r\n    if (!isValidDate(date)) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        return date.toISOString();\r\n    } catch (e) {\r\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date.getDate().toString().padStart(2, \"0\")}`;\r\n    }\r\n}","import ISO8601TestPage from './Pages/ISO8601TestPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ISO8601TestPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}